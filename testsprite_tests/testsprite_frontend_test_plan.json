[
  {
    "id": "TC001",
    "title": "User Registration Success",
    "description": "Verify that a new user can register successfully with valid details and that password hashing is applied.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the registration page"
      },
      {
        "type": "action",
        "description": "Fill in valid user details including username, email, and password"
      },
      {
        "type": "action",
        "description": "Submit the registration form"
      },
      {
        "type": "assertion",
        "description": "Confirm the user is redirected to the login page or dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify user's password is stored hashed in the database"
      },
      {
        "type": "assertion",
        "description": "Check that a success message is displayed"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Registration with Invalid Data",
    "description": "Ensure registration fails gracefully if required fields are missing or invalid and proper validation messages appear.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the registration page"
      },
      {
        "type": "action",
        "description": "Submit the registration form with missing required fields or invalid email format"
      },
      {
        "type": "assertion",
        "description": "Check that form validation errors are displayed for each invalid field"
      },
      {
        "type": "assertion",
        "description": "Ensure registration is blocked and database entry is not created"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "User Login Success",
    "description": "Verify that a registered user can log in with valid credentials and session is created.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Enter correct username/email and password"
      },
      {
        "type": "action",
        "description": "Submit the login form"
      },
      {
        "type": "assertion",
        "description": "Confirm successful authentication and redirection to the user dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify session management is active for the logged-in user"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "User Login Failure",
    "description": "Ensure login fails when incorrect credentials are provided and user receives appropriate error feedback.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Enter incorrect username/email or password"
      },
      {
        "type": "action",
        "description": "Submit the login form"
      },
      {
        "type": "assertion",
        "description": "Verify that login is denied"
      },
      {
        "type": "assertion",
        "description": "Check for an error message indicating invalid credentials"
      },
      {
        "type": "assertion",
        "description": "Ensure no session is created"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "User Logout Functionality",
    "description": "Verify that logged-in users can log out successfully and session is destroyed.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a valid user"
      },
      {
        "type": "action",
        "description": "Click the logout button or link"
      },
      {
        "type": "assertion",
        "description": "Confirm user is redirected to the homepage or login page"
      },
      {
        "type": "assertion",
        "description": "Verify that the user session is terminated and access to authenticated pages is blocked"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Create New Susu Group",
    "description": "Verify that users can successfully create a new Susu savings group with all required information and initial state.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a valid user"
      },
      {
        "type": "action",
        "description": "Navigate to create group page"
      },
      {
        "type": "action",
        "description": "Fill out the form with valid group name, description, and parameters"
      },
      {
        "type": "action",
        "description": "Submit the create group form"
      },
      {
        "type": "assertion",
        "description": "Verify the group is created with correct details and initial lifecycle state"
      },
      {
        "type": "assertion",
        "description": "Confirm the user is set as group creator/admin"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Join Susu Group via Invitation",
    "description": "Ensure users can join an existing Susu group securely using a valid invitation email token.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a valid user who has received an invitation"
      },
      {
        "type": "action",
        "description": "Navigate to the invitation join link"
      },
      {
        "type": "assertion",
        "description": "Verify that the token is valid and invitation details are shown"
      },
      {
        "type": "action",
        "description": "Accept the invitation to join the group"
      },
      {
        "type": "assertion",
        "description": "Confirm user is added to the group members list"
      },
      {
        "type": "assertion",
        "description": "Check that the invitation token cannot be reused"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Invalid or Expired Invitation Token Handling",
    "description": "Confirm the system handles invalid, expired, or already-used invitation tokens gracefully with appropriate user messages.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to join a group via an invalid, expired, or reused invitation token link"
      },
      {
        "type": "assertion",
        "description": "Verify user is shown an error message describing the token issue"
      },
      {
        "type": "assertion",
        "description": "Ensure no unauthorized group joining occurs"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Group Lifecycle State Management",
    "description": "Verify that group lifecycle transitions (e.g., active, paused, closed) follow defined state machine rules and restrict actions accordingly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create or access a group as its admin"
      },
      {
        "type": "action",
        "description": "Change group lifecycle states through valid transitions"
      },
      {
        "type": "assertion",
        "description": "Confirm state changes are saved and enforced in the system"
      },
      {
        "type": "action",
        "description": "Attempt invalid state transitions and verify that they are blocked"
      },
      {
        "type": "assertion",
        "description": "Check that group member actions respect current lifecycle state (e.g., payments disabled if group is closed)"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Record Weekly Contributions",
    "description": "Validate that group members can record their weekly contributions accurately and these are reflected in group balances.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a group member"
      },
      {
        "type": "action",
        "description": "Navigate to the group's payment contribution page"
      },
      {
        "type": "action",
        "description": "Submit payment contribution with valid amount and date"
      },
      {
        "type": "assertion",
        "description": "Verify the contribution is saved correctly in the database"
      },
      {
        "type": "assertion",
        "description": "Confirm group's total contributions are updated accordingly"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Handle Invalid Payment Submissions",
    "description": "Ensure payment forms validate input correctly and reject invalid amounts or dates, providing proper feedback.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to submit a payment contribution with invalid data such as negative amount, zero, or future date"
      },
      {
        "type": "assertion",
        "description": "Check that form validation errors appear"
      },
      {
        "type": "assertion",
        "description": "Ensure invalid payment is not recorded in the system"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Disbursement of Group Payouts",
    "description": "Verify group creators can disburse weekly payouts to members and these are accurately reflected in transaction histories.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as the group creator/admin"
      },
      {
        "type": "action",
        "description": "Navigate to the payout management interface"
      },
      {
        "type": "action",
        "description": "Initiate payout disbursement for the current cycle"
      },
      {
        "type": "assertion",
        "description": "Confirm payout records are created for group members"
      },
      {
        "type": "assertion",
        "description": "Verify balances and transaction histories are updated accordingly"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "View User Dashboard Summary",
    "description": "Ensure that upon successful login, the user dashboard loads correctly showing joined groups, recent activities, and quick links.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a valid user with groups and activities"
      },
      {
        "type": "assertion",
        "description": "Verify the dashboard page renders with user's groups listed"
      },
      {
        "type": "assertion",
        "description": "Check that recent activities appear with accurate details and timestamps"
      },
      {
        "type": "assertion",
        "description": "Confirm quick navigation links are present and functional"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Dashboard Responsiveness Across Devices",
    "description": "Verify the user dashboard UI is fully responsive and functional across desktop, tablet, and mobile screen resolutions.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open the dashboard page on a desktop browser"
      },
      {
        "type": "assertion",
        "description": "Check layout is visually coherent and navigation is accessible"
      },
      {
        "type": "action",
        "description": "Resize or open the dashboard page on tablet and mobile viewport sizes"
      },
      {
        "type": "assertion",
        "description": "Confirm UI elements adapt properly and remain usable on all devices"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "View Transaction History Details",
    "description": "Check that users can access a detailed view of all contributions, payouts, and financial group activities without data loss.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a group member"
      },
      {
        "type": "action",
        "description": "Navigate to the transaction history page"
      },
      {
        "type": "assertion",
        "description": "Verify list of transactions includes all contributions and payouts with correct timestamps and amounts"
      },
      {
        "type": "assertion",
        "description": "Check pagination or filtering capabilities if applicable"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Edit User Profile Information",
    "description": "Verify users can update their profile details and that changes persist correctly in the database.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a valid user"
      },
      {
        "type": "action",
        "description": "Navigate to the profile management page"
      },
      {
        "type": "action",
        "description": "Modify profile fields such as contact information"
      },
      {
        "type": "action",
        "description": "Submit the changes"
      },
      {
        "type": "assertion",
        "description": "Confirm the changes are saved and visible on profile reload"
      },
      {
        "type": "assertion",
        "description": "Verify database reflects updated information"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Profile Edit with Invalid Data",
    "description": "Ensure that invalid data inputs during profile edits are caught by form validation with user feedback.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to profile edit page"
      },
      {
        "type": "action",
        "description": "Enter invalid data such as malformed email or empty required fields"
      },
      {
        "type": "action",
        "description": "Submit the form"
      },
      {
        "type": "assertion",
        "description": "Verify error messages are displayed for invalid inputs"
      },
      {
        "type": "assertion",
        "description": "Ensure no changes are saved in the database"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "CSRF Protection Verification",
    "description": "Test that all forms, especially authentication, group creation/joining, and payments are protected against CSRF attacks.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt form submission without valid CSRF token using developer tools or custom script"
      },
      {
        "type": "assertion",
        "description": "Verify the server rejects the request with an appropriate error"
      },
      {
        "type": "action",
        "description": "Submit the same forms with valid CSRF token"
      },
      {
        "type": "assertion",
        "description": "Confirm that valid requests are processed successfully"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Session Management and Timeout",
    "description": "Ensure user sessions expire after inactivity and session data is handled securely.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a user"
      },
      {
        "type": "action",
        "description": "Remain idle past the configured session timeout duration"
      },
      {
        "type": "action",
        "description": "Attempt to navigate to authenticated pages"
      },
      {
        "type": "assertion",
        "description": "Confirm user is required to log in again"
      },
      {
        "type": "assertion",
        "description": "Check session cookie attributes such as Secure and HttpOnly flags"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Form Validation for Group Creation and Joining",
    "description": "Verify that all group-related forms apply robust validation and reject malformed or malicious input.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to create groups with invalid parameters (e.g., empty names, invalid characters)"
      },
      {
        "type": "assertion",
        "description": "Check validation errors are triggered and group is not created"
      },
      {
        "type": "action",
        "description": "Submit join group form with invalid or empty tokens or parameters"
      },
      {
        "type": "assertion",
        "description": "Confirm rejection with proper user feedback"
      }
    ]
  }
]
